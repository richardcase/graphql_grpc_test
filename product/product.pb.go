// Code generated by protoc-gen-go. DO NOT EDIT.
// source: product.proto

/*
Package product is a generated protocol buffer package.

It is generated from these files:
	product.proto

It has these top-level messages:
	Product
	ProductsRequest
	ProductsResponse
*/
package product

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Product struct {
	Id   int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Product) Reset()                    { *m = Product{} }
func (m *Product) String() string            { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()               {}
func (*Product) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Product) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ProductsRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ProductsRequest) Reset()                    { *m = ProductsRequest{} }
func (m *ProductsRequest) String() string            { return proto.CompactTextString(m) }
func (*ProductsRequest) ProtoMessage()               {}
func (*ProductsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ProductsRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ProductsResponse struct {
	Products []*Product `protobuf:"bytes,1,rep,name=products" json:"products,omitempty"`
}

func (m *ProductsResponse) Reset()                    { *m = ProductsResponse{} }
func (m *ProductsResponse) String() string            { return proto.CompactTextString(m) }
func (*ProductsResponse) ProtoMessage()               {}
func (*ProductsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ProductsResponse) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

func init() {
	proto.RegisterType((*Product)(nil), "product.Product")
	proto.RegisterType((*ProductsRequest)(nil), "product.ProductsRequest")
	proto.RegisterType((*ProductsResponse)(nil), "product.ProductsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Products service

type ProductsClient interface {
	GetProducts(ctx context.Context, in *ProductsRequest, opts ...grpc.CallOption) (*ProductsResponse, error)
}

type productsClient struct {
	cc *grpc.ClientConn
}

func NewProductsClient(cc *grpc.ClientConn) ProductsClient {
	return &productsClient{cc}
}

func (c *productsClient) GetProducts(ctx context.Context, in *ProductsRequest, opts ...grpc.CallOption) (*ProductsResponse, error) {
	out := new(ProductsResponse)
	err := grpc.Invoke(ctx, "/product.Products/GetProducts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Products service

type ProductsServer interface {
	GetProducts(context.Context, *ProductsRequest) (*ProductsResponse, error)
}

func RegisterProductsServer(s *grpc.Server, srv ProductsServer) {
	s.RegisterService(&_Products_serviceDesc, srv)
}

func _Products_GetProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductsServer).GetProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.Products/GetProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductsServer).GetProducts(ctx, req.(*ProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Products_serviceDesc = grpc.ServiceDesc{
	ServiceName: "product.Products",
	HandlerType: (*ProductsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProducts",
			Handler:    _Products_GetProducts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "product.proto",
}

func init() { proto.RegisterFile("product.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x28, 0xca, 0x4f,
	0x29, 0x4d, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x74, 0xb9,
	0xd8, 0x03, 0x20, 0x4c, 0x21, 0x3e, 0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xe6,
	0x20, 0xa6, 0xcc, 0x14, 0x21, 0x21, 0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x26, 0x05, 0x46,
	0x0d, 0xce, 0x20, 0x30, 0x5b, 0x49, 0x91, 0x8b, 0x1f, 0xaa, 0xbc, 0x38, 0x28, 0xb5, 0xb0, 0x34,
	0xb5, 0x18, 0x43, 0x9b, 0x92, 0x03, 0x97, 0x00, 0x42, 0x49, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa,
	0x90, 0x0e, 0x17, 0x07, 0xd4, 0xc2, 0x62, 0x09, 0x46, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x01, 0x3d,
	0x98, 0x83, 0xa0, 0x8a, 0x83, 0xe0, 0x2a, 0x8c, 0xfc, 0xb8, 0x38, 0x60, 0x26, 0x08, 0x39, 0x71,
	0x71, 0xbb, 0xa7, 0x96, 0xc0, 0xb9, 0x12, 0xe8, 0xda, 0x60, 0xce, 0x90, 0x92, 0xc4, 0x22, 0x03,
	0xb1, 0xdd, 0x49, 0x9d, 0x8b, 0x3f, 0x33, 0x5f, 0x2f, 0xbd, 0xa8, 0x20, 0x19, 0xa6, 0xc6, 0x89,
	0x07, 0xaa, 0x28, 0x00, 0x14, 0x1a, 0x01, 0x8c, 0x8b, 0x98, 0x98, 0x03, 0x82, 0x5c, 0x92, 0xd8,
	0xc0, 0x81, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xc5, 0xb6, 0xed, 0x9d, 0x2d, 0x01, 0x00,
	0x00,
}
